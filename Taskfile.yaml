version: "3"

tasks:

  run-server:
    desc: run server
    cmds:
      # go install github.com/bokwoon95/wgo@latest раннер wgo
      - wgo run cmd/server/main.go -f config.yaml
    silent: true

  protoc:
    desc: Generate grpc files from proto/gophkeeper.proto
    deps:
      - clean-gen-proto
    cmds:
      - |
        FILES=$(find api/proto/v1 -name '*.proto')
        protoc \
          -I. \
          -I$GOPATH/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.16.0/third_party/googleapis \
          --go_out=./protogen/ \
          --go_opt=paths=source_relative \
          --go-grpc_out=./protogen/ \
          --go-grpc_opt=paths=source_relative \
          --grpc-gateway_out ./protogen/ \
          --grpc-gateway_opt paths=source_relative \
          $FILES

  clean-gen-proto:
    desc: Delete generate files
    cmds:
      - find protogen -type f ! -name "*proto" -delete

  gen-certs:
    desc: Generate self-signed certs
    cmds:
      - mkdir -p certs
      - |
        openssl req -x509 -newkey rsa:4096 -nodes \
        -keyout certs/cert.key \
        -out certs/cert.crt \
        -sha256 -days 365 \
        -subj "/C=KZ/ST=Chicago/L=Chicago/O=Shortugo/OU=Dev/CN=localhost"
    generates:
      - certs/cert.crt
      - certs/cert.key
    silent: false

  lint:
    desc: Run linters using golangci-lint
    cmds:
      - golangci-lint run --config ./pkg/version/.golangci.yml
    silent: true

  cover:
    desc: Check test coverage
    cmds:
      - go test ./... -coverprofile=./cover.tmp.out -covermode=atomic -coverpkg=./...
      - grep -vE "/(mocks|main|noexit|multichecker|shortugo.pb.go|shortugo_grpc.pb.go)" cover.tmp.out > cover.out #exception by name in filepath
      - go-test-coverage --config=./.testcoverage.yml
      - go tool cover -html=cover.out -o coverage.html
    silent: true


  buildserver:
    desc: build server
    dir: cmd/server
    cmds:
      - |
        go build -ldflags "\
        -X 'gophkeeper/pkg/version.Version=1.0.0' \
        -X 'gophkeeper/pkg/version.Commit=$(git rev-parse --short HEAD)' \
        -X 'gophkeeper/pkg/version.BuildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)'" \
        -o bin/gophkeeper/cmd/server cmd/server/main.go
      - echo "Doner"
    silent: true

  buildclient:
    desc: build client
    dir: cmd/client
    cmds:
      - |
        go build -ldflags "\
        -X 'gophkeeper/pkg/version.Version=1.0.0' \
        -X 'gophkeeper/pkg/version.Commit=$(git rev-parse --short HEAD)' \
        -X 'gophkeeper/pkg/version.BuildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)'" \
        -o bin/gophkeeper/cmd/client cmd/client/main.go
      - echo "Doner"
    silent: true

  test:
    desc: run tests
    cmds:
      - go test ./...


  storage-up:
    desc: run docker minio & postgresql
    cmds:
      - docker compose -f docker-compose.storage.yaml up -d

  storage-down:
    desc: stop docker minio & postgresql
    cmds:
      - docker compose -f docker-compose.storage.yaml down



