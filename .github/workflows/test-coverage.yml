name: test coverage

on:
  push:
    branches: [ main, master, dev ]
  pull_request:
    branches: [ main, master, dev ]

jobs:
  local_tests:
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

      minio:
        image: minio/minio:latest-cicd
        ports:
          - 9000:9000
        env:
          MINIO_ROOT_USER: ${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_ROOT_PASSWORD: ${{ secrets.MINIO_SECRET_KEY }}
        options: --name=minio --health-cmd "curl http://localhost:9000/minio/health/live"


    name: Test coverage
    runs-on: ubuntu-latest
    container: golang:1.24.2
    steps:
      - name: Dump MinIO logs on failure
        if: failure()
        run: docker logs minio || true

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run go tests
        run: |
          go test ./... -coverprofile=./cover.tmp.out -covermode=atomic -coverpkg=./...
          grep -vE "/(mocks|main|google|protogen|client)" cover.tmp.out > cover.out
      - name: Show coverage summary
        run: go tool cover -func=cover.out

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: cover.out
